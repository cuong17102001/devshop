# docker compose up -d redis mongodb mysql postgres rabbitmq elasticsearch kibana

version: '3.9'
services:
  redis:
    image: redis:alpine
    container_name: redis_container
    restart: always
    ports:
      - "6379:6379"
    command: redis-server --loglevel warning
    volumes:
      - ./docker-volumes/cache:/data

  mongodb:
    image: mongo:latest
    container_name: mongodb_container
    restart: always
    ports:
      - "27017:27017"
    command: mongod --bind_ip_all
    volumes:
      - ./docker-volumes/data:/data/db

  mysql:
    image: mysql:latest  # Or specify a specific version like mysql:8.0
    container_name: mysql_container
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: your_root_password  # Replace with your desired password
      MYSQL_DATABASE: devshop  # Replace with your desired database name
      MYSQL_USER: sa  # Replace with your desired username
      MYSQL_PASSWORD: 123456  # Replace with your desired user password
    ports:
      - "3306:3306"
    volumes:
      - ./docker-volumes/mysql:/var/lib/mysql

  postgres:
    image: postgres
    container_name: postgres_container
    restart: always
    ports:
      - "5432:5432"
    command: postgres -c log_statement=all
    environment:
      POSTGRES_DB: devshop_reviews
      POSTGRES_USER: dev
      POSTGRES_PASSWORD: api
    volumes:
      - ./docker-volumes/postgres:/var/lib/postgresql/data

  rabbitmq:
    image: rabbitmq:3.13-rc-management-alpine
    container_name: rabbitmq_container
    restart: always
    ports:
      - "5672:5672"
      - "15672:15672"

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.10.4
    container_name: elasticsearch_container
    restart: always
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      - node.name=elasticsearch
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - xpack.security.enabled=true
      - xpack.security.authc.api_key.enabled=true
      - xpack.license.self_generated.type=basic
      - ES_JAVA_OPTS=-Xms1g -Xmx1g
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - ./docker-volumes/elasticsearch-data:/usr/share/elasticsearch/data
    networks:
      - elastic

  kibana:
    image: docker.elastic.co/kibana/kibana:8.10.4
    container_name: kibana_container
    restart: always
    ports:
      - "5601:5601"
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch_container:9200
    depends_on:
      - elasticsearch
    volumes:
      - ./kibana.yml/:/usr/share/kibana/config/kibana.yml:ro
    networks:
      - elastic


networks:
  elastic:
    name: elastic